version: "3.7"
services:
  backend:
    build:
      context: ./api
    hostname: api
    restart: always
    container_name: api
    depends_on:
      - neo
    ports:
      - 7860:7860
    env_file:
      - .env
    volumes:
      - ./api:/api
  frontend:
    build:
      context: ./ui
    hostname: ui
    restart: always
    container_name: ui
    ports:
      - 4173:4173
  neo:
    # Docker image to be used
    image: neo4j:5.23-community-ubi9

    # Hostname
    hostname: neo

    # The ports that will be accessible from outside the container - HTTP (7474) and Bolt (7687).
    ports:
      - "7474:7474"
      - "7687:7687"

    # Uncomment the volumes to be mounted to make them accessible from outside the container.
    volumes:
      # - ./neo4j.conf:/conf/neo4j.conf # This is the main configuration file.
      - ./neo/data/server1:/data
      - ./neo/logs/server1:/logs
      - ./neo/conf/server1:/conf
      - ./neo/import/server1:/import
      #- ./metrics/server1:/metrics
      #- ./licenses/server1:/licenses
      #- ./ssl/server1:/ssl

    # Passes the following environment variables to the container
    environment:
      NEO4J_PLUGINS: '["apoc"]'
    #   - NEO4J_ACCEPT_LICENSE_AGREEMENT
      NEO4J_AUTH: neo4j/testadmin
    #   - EXTENDED_CONF
    #   - NEO4J_EDITION
    #   - NEO4J_initial_server_mode__constraint=PRIMARY

    # Simple check testing whether the port 7474 is opened.
    # If so, the instance running inside the container is considered as "healthy".
    # This status can be checked using the "docker ps" command.
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]

    # Set up the user
    # user: admin:${GROUP_ID}